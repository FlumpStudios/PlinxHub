// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PlinxHub.Infrastructure.Data;

namespace PlinxHub.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20200407165019_AddedLiveUrlProp")]
    partial class AddedLiveUrlProp
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PlinxHub.Common.Models.ApiKeys.ApiKey", b =>
                {
                    b.Property<string>("Key")
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid>("OrderNumber")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Key");

                    b.HasIndex("OrderNumber");

                    b.ToTable("ApiKey");
                });

            modelBuilder.Entity("PlinxHub.Common.Models.Email.EmailTemplate", b =>
                {
                    b.Property<int>("EmailTemplatesId")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Subject")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EmailTemplatesId");

                    b.ToTable("EmailTemplate");

                    b.HasData(
                        new
                        {
                            EmailTemplatesId = 2,
                            Content = @"<p>Thank you very much for ordering your website through Plinx!</p>
                            <p>Your order is being processed and we will be in contact with you shortly</p>
                            <p>Your order reference is {{ORDER}}. If you have any questions, please do not hesitate to contact us at info@plinx-tech.co.uk",
                            Subject = "Order confirmation"
                        },
                        new
                        {
                            EmailTemplatesId = 1,
                            Content = "Someone has placed a new website order",
                            Subject = "New order - {{ORDER}}"
                        });
                });

            modelBuilder.Entity("PlinxHub.Common.Models.Orders.Order", b =>
                {
                    b.Property<Guid>("OrderNumber")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AddresssLine1")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("AddresssLine2")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("County")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmailAddress")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("LiveUrl")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("MediumBlogUserName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Postcode")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<string>("PrimaryBrandColour")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("SecondaryBrandColour")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("TemplateNumber")
                        .HasColumnType("int")
                        .HasMaxLength(50);

                    b.Property<string>("Town")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("OrderNumber");

                    b.HasIndex("StatusId");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("PlinxHub.Common.Models.Orders.Status", b =>
                {
                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StatusId");

                    b.ToTable("Status");

                    b.HasData(
                        new
                        {
                            StatusId = 1,
                            Name = "Processing Order"
                        },
                        new
                        {
                            StatusId = 2,
                            Name = "In Build"
                        },
                        new
                        {
                            StatusId = 3,
                            Name = "Ready"
                        },
                        new
                        {
                            StatusId = 4,
                            Name = "Live"
                        },
                        new
                        {
                            StatusId = 5,
                            Name = "Cancelled"
                        },
                        new
                        {
                            StatusId = 6,
                            Name = "On Hold"
                        });
                });

            modelBuilder.Entity("PlinxHub.Common.Models.ApiKeys.ApiKey", b =>
                {
                    b.HasOne("PlinxHub.Common.Models.Orders.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderNumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PlinxHub.Common.Models.Orders.Order", b =>
                {
                    b.HasOne("PlinxHub.Common.Models.Orders.Status", "Status")
                        .WithMany("Order")
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
