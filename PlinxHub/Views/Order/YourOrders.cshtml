@model PlinxHub.API.Dtos.OrderWithFilters
@using PlinxHub.Common.Extensions;
@using PlinxHub.Common.Models.Orders;
@{
    ViewData["Title"] = "YourOrders";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="parallax-container">
    <div class="About-Header shadow">
        <h2 style="color:white">Your orders</h2>
        <h3 style="color:white"></h3>
    </div>
    <div class="parallax"><img src="~/Content/Images/computer.jpg"></div>
</div>

<div class="container">
    <br />
    <br />
    @using (Html.BeginForm("YourOrders", "Order", FormMethod.Get))
    {
        <partial name="_orderFilters" />
    }
    @if (Model.Order.Count() > 0)
    {
<div class="table-container">
    <table class="table striped centered responsive-table">
        <thead>
            <tr>
                <th id="@nameof(Order.OrderNumber)" class="orderable">
                    Order Number
                </th>
                <th id="@nameof(Order.CreatedDate)" class="orderable">
                    Order Date
                </th>
                <th id="@nameof(Order.CompanyName)" class="orderable">
                    Company Name
                </th>
                <th id="@nameof(Order.Surname)" class="orderable">
                    Name
                </th>
                <th id="@nameof(Order.Postcode)" class="orderable">
                    Postcode
                </th>
                <th id="@nameof(Order.EmailAddress)" class="orderable">
                    Email
                </th>
                <th id="@nameof(Order.PhoneNumber)" class="orderable">
                    Phone
                </th>
                <th id="@nameof(Order.TemplateNumber)" class="orderable">
                    Template
                </th>
                <th id="@nameof(Order.StatusId)" class="orderable">
                    Status
                </th>
                <th id="@nameof(Order.LiveUrl)" class="orderable">
                    Live Url
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Order)
            {
            <tr>
                <td>
                    @item.OrderNumber.GetSubString()
                </td>
                <td>
                    @item.CreatedDate.ToShortDateString()
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CompanyName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.FirstName)  @Html.DisplayFor(modelItem => item.Surname)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Postcode)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.EmailAddress)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PhoneNumber)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.TemplateNumber)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Status.Name)
                </td>
                <td>
                    @if (string.IsNullOrEmpty(item.LiveUrl))
                    {
                        <text>Not Set</text>
                    }
                    else
                    {
                    <a href="http://@Html.DisplayFor(modelItem => item.LiveUrl)">@Html.DisplayFor(modelItem => item.LiveUrl)</a>
                    }
                </td>
                <td>
                    <span>@Html.ActionLink("Update", "Index", new { orderNumber = item.OrderNumber }, new { @class = "button btn" })</span>
                </td>
            </tr>
            }
        </tbody>
    </table>
</div>
        <br />
        @if (Model.Order.Count() < 10)
        {
            <button disabled id="page_down" class="btn btn-primary btn-sm"><i class="material-icons left">arrow_back</i></button>
        }
        else
        {
            <button id="page_down" class="btn btn-primary btn-sm"><i class="material-icons left">arrow_back</i></button>
        }

        @if (Model.Filters.Take > 0)
        {
            <button id="page_up" class="btn btn-primary"><i class="material-icons left">arrow_forward</i></button>
        }
        else
        {
            <button disabled id="page_down" class="btn btn-primary"><i class="material-icons left">arrow_forward</i></button>
        }
    }
    else
    {
        <h5 class="center-align">Looks like you don't have any orders. Click @Html.ActionLink("here", "index", "order") to make your first order</h5>
    }
    <br />
    <br />
</div>
<div class="parallax-container">
    <div class="parallax"><img src="~/Content/Images/computer.jpg"></div>
</div>
<style>
    .button {
        color: white !important;
    }

    td, th {
        text-align: center
    }
</style>
